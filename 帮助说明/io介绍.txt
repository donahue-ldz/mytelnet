 Linux中的终端I/O介绍
在linux中，对终端设备I/O遵循着与对文件或套接宇I/O相同的打开—读—写—关闭范例。应用程序调用open得到一个终端的键盘或显示器的I/O描述符，调用read来接收用户从键盘键入的数据，或者调用write把数据传送到终端的显示器上。
大多数应用程序希望用户在显示器上看到他们所健入的每个字符的副本，但有的应用需要禁止打印输入。具体来说，为了避免口令被偷看，需要输入口令的程序通常在用户输入口令时停止显示输入字符。
让每个应用程序处理所有终端I/O和字符显示的细节会很不便，因此，Linux操作系统提供了自动处理这些内容的软件。这种软件称为终端设备驱动器，该软件驻留在如图2-3所示的操作系统内核中。
 
图2-3 Linux中的终端设备驱动器以及数据流的路径
说明：
所有终端I/O的数据从键盘流入系统或从系统流出到终端显示器都通过设备驱动器传送。
设备驱动器把键盘输入与对应的终端显示器联系起来。它可以被命令为回显每个输入字符(即显示用户键人的每个字符)，或者禁止回显(即关闭显示输入字符)。它允许用户用退格键或删除键来编辑错误，或者直接把所有字符(包括Delete和Backspace)传送给应用程序。当程序发送一个行结束符时大多数终端要求操作系统发送一个LF以及一个CR字符来把光标移到下一行的开始。LF把显示屏垂直向下移动，CR移到当前行的开始。驱动器也可以生成一个特殊的字符序列，把光标放在新行的开始。最后，设备驱动器能识别一个(或多个)特殊字符，它们使系统中断(Interrupt)或异常中止(Abort)当前进程。当用户键入该特殊字符时，驱动器把它转换成一个信号(Signal)，该信号把当前应用程序异常中止。
